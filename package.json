{
  "name": "ioredis-in-memory",
  "version": "1.0.1",
  "description": "An ioredis with in memory backend for unit testing",
  "main": "./lib/index.js",
  "types": "./lib/index.d.ts",
  "scripts": {
    "clean": "rimraf lib coverage",
    "compile": "tsc",
    "build": "run-s clean lint compile",
    "prepublishOnly": "npm run build",
    "lint": "tslint src/**.ts",
    "pretest": "run-s clean lint",
    "test": "jest --no-watchman --no-cache",
    "test:dev": "jest --watch"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nileshmali/ioredis-in-memory.git"
  },
  "keywords": [
    "ioredis",
    "mock-ioredis",
    "ioredis-mock",
    "mock",
    "in-memory",
    "in",
    "memory",
    "redis",
    "redis-mock"
  ],
  "author": "Nilesh Mali",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/nileshmali/ioredis-in-memory/issues"
  },
  "homepage": "https://github.com/nileshmali/ioredis-in-memory#readme",
  "devDependencies": {
    "@types/bluebird": "^3.5.8",
    "@types/jest": "^23.0.0",
    "@types/lodash.random": "^3.2.3",
    "@types/minimatch": "^3.0.1",
    "@types/node": "^10.3.2",
    "jest": "^22.0.0",
    "npm-run-all": "^4.0.2",
    "rimraf": "^2.6.1",
    "ts-jest": "^23.10.0",
    "tslint": "^5.6.0",
    "typescript": "^2.4.2"
  },
  "dependencies": {
    "bluebird": "^3.5.0",
    "lodash.random": "^3.2.0",
    "minimatch": "^3.0.4"
  },
  "engines": {
    "node": ">=6",
    "npm": ">=3.0.0"
  },
  "jest": {
    "verbose": true,
    "transform": {
      ".(ts)": "<rootDir>/node_modules/ts-jest/preprocessor.js"
    },
    "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|js)$",
    "testPathIgnorePatterns": [
      "<rootDir>/node_modules/",
      "<rootDir>/lib/",
      "<rootDir>/coverage/"
    ],
    "moduleFileExtensions": [
      "ts",
      "js",
      "json"
    ],
    "resetMocks": true,
    "mapCoverage": true,
    "collectCoverage": true,
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/index.ts",
      "!src/commands/index.ts"
    ],
    "coverageReporters": [
      "text-summary",
      "lcov"
    ],
    "coverageDirectory": "coverage",
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    }
  }
}
